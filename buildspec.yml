version: 0.2

phases:
  install:
    runtime-versions:
      python: 3.11
    commands:
      # - nohup /usr/local/bin/dockerd --host=unix:///var/run/docker.sock --host=tcp://127.0.0.1:2375 --storage-driver=overlay2 &
      - timeout 15 sh -c "until docker info; do echo .; sleep 1; done"
      - pip install -r requirements.txt
      # - apt-get update && apt-get install zip
  pre_build:
    commands:
      - echo Pre-build phase
      - echo Logging in to Amazon ECR...
      - aws ecr get-login-password --region $AWS_DEFAULT_REGION | docker login --username AWS --password-stdin $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com
      # - command
  build:
    commands:
      # - echo ${SourceVariables.BranchName}
      - echo Build phase
      - echo Build started on `date`
      - echo Run Lint tests
      - printenv
      - flake8    
      # - IMAGE_TAG=$(git describe --always)
      - echo "Building the Docker image (image tag - $IMAGE_TAG)..."      
      - docker build -t my-image:$IMAGE_TAG .
      # - docker tag $IMAGE_REPO_NAME:$IMAGE_TAG $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$IMAGE_REPO_NAME:$IMAGE_TAG      
      # - command
  post_build:
    commands:
      - echo Post-build phase
      - echo Build completed on `date`
      - echo Pushing the Docker image...
      - chmod +x scripts/push-image.sh && sh scripts/push-image.sh
      # - if [ "$BRANCH_NAME" == "dev" ]; then docker tag $DEV_REPO:$IMAGE_TAG $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$DEV_REPO:$IMAGE_TAG; docker push $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$DEV_REPO:$IMAGE_TAG ; fi
      # - if [ "$BRANCH_NAME" == "master" ]; then docker tag $STAGING_REPO:$IMAGE_TAG $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$STAGING_REPO:$IMAGE_TAG; docker push $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$STAGING_REPO:$IMAGE_TAG ; fi
      # - if [ "$BRANCH_NAME" == "master" ]; then docker tag $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$STAGING_REPO:$IMAGE_TAG $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$PROD_REPO:$IMAGE_TAG; docker push $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$PROD_REPO:$IMAGE_TAG ; fi
      # - echo Zipping files for deployment...
      # - zip -r artifacts.zip scripts docker-compose.yml
artifacts:
  files:
    # - ./artifacts.zip
    - ./appspec.yml
    - ./scripts/*
    
  